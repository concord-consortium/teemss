package org.concord.LabBook;import waba.util.*;import waba.ui.*;import extra.io.*;import org.concord.waba.extra.ui.*;import extra.ui.*;import extra.util.CCUnit;import org.concord.waba.extra.event.*;//LabObject implements Storablepublic class LObjImage extends LabObject{public LObjImageView view = null;    public LObjImage()    {		objectType = IMAGEOBJ;    }    public LabObjectView getView(LObjViewContainer vc, boolean edit)    {    	  		if(view == null){    			view = new LObjImageView(vc, this, edit);    	}else if(view.container == null){    		view.container = vc;    		if(view.menu == null && edit){    			view.addMenus(vc);    		}    	}		return view;    }    public void writeExternal(DataStream out)    {		super.writeExternal(out);		if(view == null) return;		view.writeExternal(out);    }    public void readExternal(DataStream in)    {		super.readExternal(in);		if(view == null) view = new LObjImageView(null, this,false);		view.readExternal(in);    }}class LObjImageView extends LabObjectView implements ActionListener{	Button clearButton,convertButton,doneButton,dirButton;	Choice catChoice;	Choice currChoiceFrom,currChoiceTo;	Edit	numberLeft,numberRight;	boolean leftToRight = true;    Menu menu = null;	public LObjImageView(LObjViewContainer vc, LObjImage d,boolean edit){		super(vc);		if(edit) addMenus(vc);		lObj = d;		}	public void addMenus(LObjViewContainer vc){				if(menu != null || vc == null) return;		menu = new Menu("Image");		menu.add("Load Image ...");		menu.addActionListener(this);		vc.addMenu(this, menu);	}    public void writeExternal(DataStream out){    }    public void readExternal(DataStream in){    }    public void layout(boolean sDone){		if(didLayout) return;		didLayout = true;		showDone = sDone;		if(showDone){			doneButton = new Button("Done");			add(doneButton);		}	}	public void setRect(int x, int y, int width, int height){		super.setRect(x,y,width,height);		if(!didLayout) layout(true);		if(doneButton != null){			doneButton.setRect(width/2 - 20, height - 17, 40, 15);		}	}    public void close(){		if(container != null){		    container.delMenu(this,menu);		}    }	public void onEvent(Event e){		if(e.target == doneButton &&			e.type == ControlEvent.PRESSED){			if(container != null){				container.done(this);			}			}	}    public void actionPerformed(ActionEvent e){		if(e.getActionCommand().equals("Load Image ...")){			System.out.println("IMAGE");		}    }}