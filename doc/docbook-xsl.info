file: docbook-xsl.info
Stephen Bannasch, 21 Mar 2002

The xml files are meant to be proccessed with Norman Walsh's DocBook
XSL files.  I normall usethe most recent release.  As I am writing
this it is the docbook-xsl-1.50.0 distribution which is
available in the Files area at:

  http://sourceforge.net/projects/docbook/

However there are a number of issues when using this xsl and fop
v0.20.rc3.  In the fo/ directory in the docbook xsl distribution is a
file named customization.xsl.  This is used to override some of the
functions in the xsl files in order to make the fo output work more
cleanly with fop.  After downloading the docbook-xsl distribution
unpack it in this directory and copy the file customization.xsl into
docbook-xsl-<release>/fo.

I also wanted to display an image on the cover page.  This required 

There's an partial answer in Dave Pawson's FAQ on title
page customization:

http://www.dpawson.co.uk/docbook/styling/titlepage.html

I looked at Dave's site along with Norm's article here:

  http://nwalsh.com/docs/articles/dbdesign/

I wanted to customize my attributes for the elements on my titlepage
so I made a form like this in my titlepage template :

  <t:titlepage element="book" wrapper='fo:block'>
    <t:titlepage-content side='recto'>
      <title predicate="[1]"
        font-size="24pt"
        space-before="36pt"/>
      <author
        space-before="24pt"/>
      <corpname
        space-before="8pt"/>
      <mediaobject
        space-before="64pt"/>
      <pubdate
        space-before="64pt"/>
      <releaseinfo
        space-before="8pt"/>
    </t:titlepage-content>
  </t:titlepage>

None of the additional attributes were passed through into the
constructed titlepage.xsl. So I modified <xsl:template
match="t:titlepage"> in docbook-xsl-1.49/template/titlepage.xsl as
follows:

          <xsl:for-each select="@*">
<!--        <xsl:if
test="namespace-uri(.)='http://www.w3.org/1999/XSL/Format'"> -->
            <xsl:if test="local-name(.)!='predicate'">
              <xsl:attribute name="{local-name(.)}">
                <xsl:value-of select="."/>
              </xsl:attribute>
            </xsl:if>
          </xsl:for-each>

My change is probably not optimal because I don't understand how the
namespace-uri test was intended to operate.  In any case now I get
output like this in the resulting xsl:

<xsl:template match="mediaobject"
mode="book.titlepage.recto.auto.mode">
<fo:block xsl:use-attribute-sets="book.titlepage.recto.style"
space-before="64pt">
<xsl:apply-templates select="." mode="book.titlepage.recto.mode"/>
</fo:block>
</xsl:template>

This is the dir and command I use to process mytitlepage:

docbook-xsl-1.50.0]java org.apache.xalan.xslt.Process -in mytitlepage.xml -xsl
template/titlepage.xsl -out ../ccprobe-ref/titlepage.xsl

















